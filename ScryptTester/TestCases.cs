using System.Text;

namespace ScryptManaged.ScryptTester
{
    public class TestCases
    {
        public struct TestCase
        {
            public byte[] P;
            public byte[] S;
            public int N;
            public short r;
            public short p;
            public int OutLen;
            public byte[] Result;
            public string EncodedResult;
            public TestCase(byte[] Pass, byte[] Secret, int Iterations, short BlockSize, short Lanes, int OutputLengthInBytes, byte[] Result, string EncodedResult)
            {
                P = Pass;
                S = Secret;
                N = Iterations;
                r = BlockSize;
                p = Lanes;
                OutLen = OutputLengthInBytes;
                this.Result = Result;
                this.EncodedResult = EncodedResult;
            }
            public TestCase(string Pass, string Secret, int Iterations, short BlockSize, short Lanes, int OutputLengthInBytes, byte[] Result, string EncodedResult)
            {
                P = Encoding.UTF8.GetBytes(Pass);
                S = Encoding.UTF8.GetBytes(Secret);
                N = Iterations;
                r = BlockSize;
                p = Lanes;
                OutLen = OutputLengthInBytes;
                this.Result = Result;
                this.EncodedResult = EncodedResult;
            }
        }

        private TestCase[] _cases;
        public TestCase[] Cases {  get { return _cases; } }

        public TestCases()
        {
            _cases = new TestCase[6];
            _cases[0] = new TestCase("password", "NaCl", 1024, 8, 16, 64, new byte[64] {
                0xfd, 0xba, 0xbe, 0x1c, 0x9d, 0x34, 0x72, 0x00, 0x78, 0x56, 0xe7, 0x19, 0x0d, 0x01, 0xe9, 0xfe,
                0x7c, 0x6a, 0xd7, 0xcb, 0xc8, 0x23, 0x78, 0x30, 0xe7, 0x73, 0x76, 0x63, 0x4b, 0x37, 0x31, 0x62,
                0x2e, 0xaf, 0x30, 0xd9, 0x2e, 0x22, 0xa3, 0x88, 0x6f, 0xf1, 0x09, 0x27, 0x9d, 0x98, 0x30, 0xda,
                0xc7, 0x27, 0xaf, 0xb9, 0x4a, 0x83, 0xee, 0x6d, 0x83, 0x60, 0xcb, 0xdf, 0xa2, 0xcc, 0x06, 0x40 },
                "$s2$1024$8$16$TmFDbA==$/bq+HJ00cgB4VucZDQHp/nxq18vII3gw53N2Y0s3MWIurzDZLiKjiG/xCSedmDDaxyevuUqD7m2DYMvfoswGQA==");
            _cases[1] = new TestCase("pleaseletmein", "SodiumChloride", 16384, 8, 1, 64, new byte[64] {
                0x70, 0x23, 0xbd, 0xcb, 0x3a, 0xfd, 0x73, 0x48, 0x46, 0x1c, 0x06, 0xcd, 0x81, 0xfd, 0x38, 0xeb,
                0xfd, 0xa8, 0xfb, 0xba, 0x90, 0x4f, 0x8e, 0x3e, 0xa9, 0xb5, 0x43, 0xf6, 0x54, 0x5d, 0xa1, 0xf2,
                0xd5, 0x43, 0x29, 0x55, 0x61, 0x3f, 0x0f, 0xcf, 0x62, 0xd4, 0x97, 0x05, 0x24, 0x2a, 0x9a, 0xf9,
                0xe6, 0x1e, 0x85, 0xdc, 0x0d, 0x65, 0x1e, 0x40, 0xdf, 0xcf, 0x01, 0x7b, 0x45, 0x57, 0x58, 0x87 },
                "$s2$16384$8$1$U29kaXVtQ2hsb3JpZGU=$cCO9yzr9c0hGHAbNgf046/2o+7qQT44+qbVD9lRdofLVQylVYT8Pz2LUlwUkKpr55h6F3A1lHkDfzwF7RVdYhw==");
            _cases[2] = new TestCase(new byte[]
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                Encoding.UTF8.GetBytes("miliLock+test1@mailinator.com"), 131072, 8, 1, 32, new byte[32] {
                0x8d, 0xa6, 0x51, 0x99, 0xa6, 0xea, 0xf2, 0xd0, 0x83, 0x67, 0xbf, 0x89, 0x95, 0xe2, 0x3f, 0x83,
                0xd8, 0x94, 0x07, 0xc7, 0x84, 0xba, 0x39, 0x52, 0x42, 0x1c, 0x96, 0xa3, 0x39, 0x06, 0x64, 0xfd},
                "$s2$131072$8$1$bWlsaUxvY2srdGVzdDFAbWFpbGluYXRvci5jb20=$jaZRmabq8tCDZ7+JleI/g9iUB8eEujlSQhyWozkGZP0=");
            _cases[3] = new TestCase("", "nopassword", 16, 1, 1, 64,
                new byte[] { // THIS WILL THROW AN EXCEPTION IN RELEASE MODE!
                0x77, 0xd6, 0x57, 0x62, 0x38, 0x65, 0x7b, 0x20, 0x3b, 0x19, 0xca, 0x42, 0xc1, 0x8a, 0x04, 0x97,
                0xf1, 0x6b, 0x48, 0x44, 0xe3, 0x07, 0x4a, 0xe8, 0xdf, 0xdf, 0xfa, 0x3f, 0xed, 0xe2, 0x14, 0x42,
                0xfc, 0xd0, 0x06, 0x9d, 0xed, 0x09, 0x48, 0xf8, 0x32, 0x6a, 0x75, 0x3a, 0x0f, 0xc8, 0x1f, 0x17,
                0xe8, 0xd3, 0xe0, 0xfb, 0x2e, 0x0d, 0x36, 0x28, 0xcf, 0x35, 0xe2, 0x0c, 0x38, 0xd1, 0x89, 0x06 },
                "");
            _cases[4] = new TestCase("pleaseletmein", "SodiumChloride", 1048576, 8, 1, 64, new byte[64] {
                0x21, 0x01, 0xcb, 0x9b, 0x6a, 0x51, 0x1a, 0xae, 0xad, 0xdb, 0xbe, 0x09, 0xcf, 0x70, 0xf8, 0x81,
                0xec, 0x56, 0x8d, 0x57, 0x4a, 0x2f, 0xfd, 0x4d, 0xab, 0xe5, 0xee, 0x98, 0x20, 0xad, 0xaa, 0x47,
                0x8e, 0x56, 0xfd, 0x8f, 0x4b, 0xa5, 0xd0, 0x9f, 0xfa, 0x1c, 0x6d, 0x92, 0x7c, 0x40, 0xf4, 0xc3,
                0x37, 0x30, 0x40, 0x49, 0xe8, 0xa9, 0x52, 0xfb, 0xcb, 0xf4, 0x5c, 0x6f, 0xa7, 0x7a, 0x41, 0xa4 }, "");
            _cases[5] = new TestCase("", "", 16, 1, 1, 64, // THIS WILL THROW AN "NULL SALT" EXCEPTION!
                new byte[] { 0 }, "");
        }
    }
}
